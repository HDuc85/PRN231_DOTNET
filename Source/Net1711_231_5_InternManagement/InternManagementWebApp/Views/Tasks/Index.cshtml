@model IEnumerable<InternManagementData.Models.Task>

@{
    ViewData["Title"] = "Index";
    var pageNumber = ViewData["PageNumber"] as int? ?? 1;
    var pageSize = ViewData["PageSize"] as int? ?? 10;

    var totalCount = @ViewBag.TotalCount; 
    var pageCount = (int)Math.Ceiling(totalCount / (double)pageSize);


    var tasksToShow = Model.ToList();
}

<h1>Task List</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>


 @*    <div class="form-group flex-grow-1">
     
        <button id="Search" type="submit" class="btn btn-primary">Search</button>
        <button  id="addSearchCriteria" class="btn btn-success">Add Search Criteria</button>
        <div id="searchCriteriaContainer" class="mt-3">
        </div>
    </div> *@
<button id="addSearchCriteria" class="btn btn-success">Add Search Criteria</button>

<form id="searchForm" method="post" action="@Url.Action("Search", "Tasks")">
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

    <div id="searchCriteriaContainer" class="mt-3">
     
    </div>
</form>





<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().TaskName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().TaskDecription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().TaskCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Comments)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LastUpdated)
            </th>
            <th>Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in tasksToShow)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskDecription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskCategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdated)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.TaskId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.TaskId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.TaskId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="col-sm">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(pageNumber <= 1 ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=1">First</a>
                </li>
                <li class="page-item @(pageNumber <= 1 ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(pageNumber - 1)">Previous</a>
                </li>

                @for (var i = 1; i <= pageCount; i++)
                {
                    <li class="page-item @(i == pageNumber ? "active" : "")">
                        <a class="page-link" href="?pageNumber=@i">@i</a>
                    </li>
                }

                <li class="page-item @(pageNumber >= pageCount ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@(pageNumber + 1)">Next</a>
                </li>
                <li class="page-item @(pageNumber >= pageCount ? "disabled" : "")">
                    <a class="page-link" href="?pageNumber=@pageCount">Last</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var index = 0;

            $("#addSearchCriteria").click(function () {
                index++;

                var selectOptions = [
                    { value: "TaskName", text: "Task Name" },
                    { value: "TaskDecription", text: "Task Description" },
                    { value: "Priority", text: "Priority" },
                    { value: "TaskCategory", text: "Task Category" },
                    { value: "Comments", text: "Comments" }
                ];

                var usedFields = [];
                $(".search-field").each(function () {
                    usedFields.push($(this).val());
                });

                var availableOptions = selectOptions.filter(function (option) {
                    return !usedFields.includes(option.value);
                });

                var selectHtml = "<select name='searchCriteria[" + index + "].Key' class='form-control search-field'>";
                availableOptions.forEach(function (option) {
                    selectHtml += "<option value='" + option.value + "'>" + option.text + "</option>";
                });
                selectHtml += "</select>";

                var inputHtml = "<input type='text' name='searchCriteria[" + index + "].Value' class='form-control' placeholder='Enter search value...'>";

                var removeButtonHtml = "<button type='button' class='btn btn-danger mt-2 remove-criteria'>Remove</button>";

                var containerHtml = "<div class='mt-3 flex-row'>" + selectHtml + " " + inputHtml + " " + removeButtonHtml + "</div>";

                $("#searchCriteriaContainer").append(containerHtml);
            });

            $("#searchCriteriaContainer").on("click", ".remove-criteria", function () {
                $(this).closest("div").remove();
            });
        });
        function getSearchCriteriaData() {
            var criteriaData = [];

            $("#searchCriteriaContainer > div").each(function () {
                var selectField = $(this).find("select").val();
                var inputValue = $(this).find("input").val();

                if (selectField && inputValue) {
                    criteriaData.push({
                        key: selectField,
                        value: inputValue
                    });
                }
            });

            return criteriaData;
        }

        $("#searchForm").submit(function (event) {
            

            var criteriaData = getSearchCriteriaData();
          

            $.ajax({
                url: '@Url.Action("Search", "Tasks")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(criteriaData),
                success: function (response) {
                    if (response.success) {
                        window.location.href = response.redirectUrl;
                    } else {
                        console.error("Error:", response.message);
                    }
                },
                error: function (error) {
                    window.location.href = response.redirectUrl;
                }
            });
        });
                
    </script>
}
