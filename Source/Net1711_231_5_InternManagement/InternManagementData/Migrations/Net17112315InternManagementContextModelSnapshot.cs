// <auto-generated />
using System;
using InternManagementData.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternManagementData.Migrations
{
    [DbContext(typeof(Net17112315InternManagementContext))]
    partial class Net17112315InternManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InternManagementData.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CompanyEmail")
                        .HasMaxLength(320)
                        .IsUnicode(false)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CompanyPhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("CompanyId")
                        .HasName("PK__Company__2D971C4C946A4B9B");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("EmployeeAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmployeeEmail")
                        .HasMaxLength(320)
                        .IsUnicode(false)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmployeePhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF17D952C50");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.InternProfile", b =>
                {
                    b.Property<int>("InternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InternID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InternId"));

                    b.Property<string>("InternAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InternEmail")
                        .HasMaxLength(320)
                        .IsUnicode(false)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("InternName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InternPhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Major")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("MentorID");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.Property<string>("University")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InternId")
                        .HasName("PK__InternPr__6910ED829DD0E6AF");

                    b.HasIndex("MentorId");

                    b.ToTable("InternProfile", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.MentorIntern", b =>
                {
                    b.Property<int>("MentorInternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MentorInternID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorInternId"));

                    b.Property<int?>("InternId")
                        .HasColumnType("int")
                        .HasColumnName("InternID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("MentorID");

                    b.HasKey("MentorInternId")
                        .HasName("PK__MentorIn__2217D7BF4265B011");

                    b.HasIndex("InternId");

                    b.HasIndex("MentorId");

                    b.ToTable("MentorIntern", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.MentorProfile", b =>
                {
                    b.Property<int>("MentorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MentorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MentorId"));

                    b.Property<string>("MentorAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MentorEmail")
                        .HasMaxLength(320)
                        .IsUnicode(false)
                        .HasColumnType("varchar(320)");

                    b.Property<string>("MentorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MentorPhone")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Password");

                    b.HasKey("MentorId")
                        .HasName("PK__MentorPr__053B7E7816101203");

                    b.ToTable("MentorProfile", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.ProgramIntern", b =>
                {
                    b.Property<int>("ProgramInternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgramInternID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramInternId"));

                    b.Property<int?>("InternId")
                        .HasColumnType("int")
                        .HasColumnName("InternID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("ProgramID");

                    b.HasKey("ProgramInternId")
                        .HasName("PK__ProgramI__44F12DE373C7B9C6");

                    b.HasIndex("InternId");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramIntern", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.ProgramTask", b =>
                {
                    b.Property<int>("ProgramTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgramTaskID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramTaskId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("ProgramID");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.HasKey("ProgramTaskId")
                        .HasName("PK__ProgramT__8B64F485E20E21BB");

                    b.HasIndex("ProgramId");

                    b.HasIndex("TaskId");

                    b.ToTable("ProgramTask", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("StatusName")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("StatusId")
                        .HasName("PK__Status__C8EE20436BC997AD");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<string>("TaskDecription")
                        .HasColumnType("ntext");

                    b.Property<string>("TaskName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TaskId")
                        .HasName("PK__Task__7C6949D162EF0762");

                    b.HasIndex("StatusId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.TaskManage", b =>
                {
                    b.Property<int>("TaskManageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaskManageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskManageId"));

                    b.Property<int?>("InternId")
                        .HasColumnType("int")
                        .HasColumnName("InternID");

                    b.Property<int?>("MentorId")
                        .HasColumnType("int")
                        .HasColumnName("MentorID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("TaskID");

                    b.HasKey("TaskManageId")
                        .HasName("PK__TaskMana__8AFA651A1B0DD46F");

                    b.HasIndex("InternId");

                    b.HasIndex("MentorId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskManage", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.TrainingProgram", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProgramID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ProgramDecription")
                        .HasColumnType("ntext");

                    b.Property<string>("ProgramName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("ProgramId")
                        .HasName("PK__Training__752560382C59AD08");

                    b.ToTable("TrainingProgram", (string)null);
                });

            modelBuilder.Entity("InternManagementData.Models.Employee", b =>
                {
                    b.HasOne("InternManagementData.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Employee__Compan__4AB81AF0");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("InternManagementData.Models.InternProfile", b =>
                {
                    b.HasOne("InternManagementData.Models.MentorProfile", "Mentor")
                        .WithMany("InternProfiles")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__InternPro__Mento__4BAC3F29");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("InternManagementData.Models.MentorIntern", b =>
                {
                    b.HasOne("InternManagementData.Models.InternProfile", "Intern")
                        .WithMany("MentorInterns")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK__MentorInt__Inter__4CA06362");

                    b.HasOne("InternManagementData.Models.MentorProfile", "Mentor")
                        .WithMany("MentorInterns")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__MentorInt__Mento__4D94879B");

                    b.Navigation("Intern");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("InternManagementData.Models.ProgramIntern", b =>
                {
                    b.HasOne("InternManagementData.Models.InternProfile", "Intern")
                        .WithMany("ProgramInterns")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK__ProgramIn__Inter__4E88ABD4");

                    b.HasOne("InternManagementData.Models.TrainingProgram", "Program")
                        .WithMany("ProgramInterns")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK__ProgramIn__Progr__4F7CD00D");

                    b.Navigation("Intern");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("InternManagementData.Models.ProgramTask", b =>
                {
                    b.HasOne("InternManagementData.Models.TrainingProgram", "Program")
                        .WithMany("ProgramTasks")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK__ProgramTa__Progr__5070F446");

                    b.HasOne("InternManagementData.Models.Task", "Task")
                        .WithMany("ProgramTasks")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__ProgramTa__TaskI__5165187F");

                    b.Navigation("Program");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("InternManagementData.Models.Task", b =>
                {
                    b.HasOne("InternManagementData.Models.Status", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Task__StatusID__52593CB8");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("InternManagementData.Models.TaskManage", b =>
                {
                    b.HasOne("InternManagementData.Models.InternProfile", "Intern")
                        .WithMany("TaskManages")
                        .HasForeignKey("InternId")
                        .HasConstraintName("FK__TaskManag__Inter__534D60F1");

                    b.HasOne("InternManagementData.Models.MentorProfile", "Mentor")
                        .WithMany("TaskManages")
                        .HasForeignKey("MentorId")
                        .HasConstraintName("FK__TaskManag__Mento__5441852A");

                    b.HasOne("InternManagementData.Models.Status", "Status")
                        .WithMany("TaskManages")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__TaskManag__Statu__5535A963");

                    b.HasOne("InternManagementData.Models.Task", "Task")
                        .WithMany("TaskManages")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK__TaskManag__TaskI__5629CD9C");

                    b.Navigation("Intern");

                    b.Navigation("Mentor");

                    b.Navigation("Status");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("InternManagementData.Models.Company", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("InternManagementData.Models.InternProfile", b =>
                {
                    b.Navigation("MentorInterns");

                    b.Navigation("ProgramInterns");

                    b.Navigation("TaskManages");
                });

            modelBuilder.Entity("InternManagementData.Models.MentorProfile", b =>
                {
                    b.Navigation("InternProfiles");

                    b.Navigation("MentorInterns");

                    b.Navigation("TaskManages");
                });

            modelBuilder.Entity("InternManagementData.Models.Status", b =>
                {
                    b.Navigation("TaskManages");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("InternManagementData.Models.Task", b =>
                {
                    b.Navigation("ProgramTasks");

                    b.Navigation("TaskManages");
                });

            modelBuilder.Entity("InternManagementData.Models.TrainingProgram", b =>
                {
                    b.Navigation("ProgramInterns");

                    b.Navigation("ProgramTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
